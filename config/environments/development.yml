# Configuration values defined here override any values defined in platform.yml
---
compose:
  images: # profiles:
    - name: development
      rails_env: development
      os_packages: ['libpq5', 'git', 'sudo', 'vim', 'less', 'tcpdump', 'net-tools', 'iputils-ping']

  profiles: # deployments:
    - name: realtime
      description: Run services and workers with localstack and host source mounted
      groups: ['services', 'workers', 'mounted', 'localstack'] # Add storage
    - name: realtime-ops
      groups: ['services', 'workers', 'mounted', 'localstack', 'ops'] # Add storage
      description: Run services, workers, fluentd, prometheus and grafana with localstack and host source mounted
    - name: static
      description: Run services and workers with localstack
      groups: ['services', 'workers', 'localstack'] # Add storage
    - name: static-ops
      groups: ['services', 'workers', 'localstack', 'ops'] # Add storage
      description: Run services, workers, fluentd, prometheus and grafana with localstack

  deployments: # groups:
    - name: services
      files: ['compose/base.yml', 'compose/services.yml', 'compose/nginx.yml']
    - name: workers
      files: ['compose/workers.yml']
      config:
        workers:
          enabled: yes
          provider: sidekiq
    - name: mounted
      files: ['compose/mounts.yml']
    - name: ops
      files: ['compose/fluentd.yml', 'compose/monitoring.yml']
      config:
        request_logging:
          enabled: yes
        system_logging:
          enabled: yes
    - name: localstack
      files: ['compose/localstack.yml', 'compose/sftp-localstack.yml']
    - name: storage
      files: ['compose/sftp.yml']

# TODO: Ros needs to write out values to tfvars somewhere
# Duan will provide the var names, values and file location
devops:
  cicd:
    provider: circleci
    push_on_new_tag: true
  deployments:
    - name: server
      provider: aws
      type: instance
      instance_type: t3.large
      aws_region: ap-southeast-1
      ec2_key_pair: ''
      lambda_filename: ''
      ec2_tags:
        managed_by: terraform
      ami_distro: debian
      tf_state:
        type: local
        # can be remote tf state
        # type: s3
        # bucket: org-rails-on-services-terraform-state
        # key: ros-develop-ec2
        # dynamodb_table: org-rails-on-services-terraform-lock
      dns:
        domain: rails-on-services.org
        subdomain: ros
        hostnames: ['api', 'sftp']
    - name: cluster-devops
      provider: aws
      type: kubernetes
      namespace: default
      # namespace:
      #   ref: branch
      aws_region: ap-southeast-1
      tf_state:
        type: local
        # can be remote tf state
        # type: s3
        # bucket: org-rails-on-services-terraform-state
        # key: ros-develop-kubernetes
        # dynamodb_table: org-rails-on-services-terraform-lock
      dns:
        domain: rails-on-services.org
        subdomain: devops

# NOTEs:
# each service listed here corresponds to a file in the compose directory
services:
  storage:
    # requires localstack running s3 or and S3 bucket, SFTP container, Rails Storage service
    # if enabled then either the ALB or the SG needs to permit the SFTP port
    # If localstack include that in COMPIOSE_FILE in .env
    # If S3 then when calling ros infra:provision it writes a value to tfvars that has TF create the S3 bucket
    enabled: true
    type: localstack # :s3
    mount: yes
    command: ["rails", "this"]
  billing:
    enabled: false
  monitoring: # prom + grafana
    enabled: false
  logging: # flucentd
    enabled: false
    type: localstack # :s3
